//Test data를 Training에 사용해서는 안 된다는 점을 주의
- 테스트 데이터의 정확성이 100%라고 나왔다면 위와 같은 실수를 한 것이 아닌지 확인해보기

//데이터 분할
- 데이터 세트 하나를 다음과 같이 분할하는 방법을 생각해 볼 수 있음
  [                     training set                      ][  test set  ]
- test set는 다음 두 가지 조건을 만족해야 함
  - 통계적으로 유의미한 결과를 도출할 만큼 커야함
  - 데이터 세트를 전체적으로 나타내어야 함. 즉, test set가 training set와 같은 특징을 가지도록 선별해야 함

//test set가 위와 같은 두 가지 조건을 만족한다면 이제 새로운 데이터에도 일반화될 수 있는 모델을 만드는 것이 목표
- test set는 새 데이터를 모의 실험하는 역할

//테스트 데이터로 학습하지 않기
- 평가 측정항목에서 이상할 정도로 좋은 결과가 나온다면 실수로 평가 세트로 학습했다는 증거일 수 있음
- 정확도가 높다면 테스트 데이터가 학습 세트로 유출되었을 수 있음
- 예를 들어 제목, 본문, 보낸 사람의 이메일 주소를 특성을 사용하여 스팸 메일을 가려내는 모델이 있다고 가정
  - 데이터를 80:20 비율로 training set와 test set로 배분
  - 학습 후에 모델은 training set와 test set 모두에서 99%의 정확성을 보임
  - test set에서는 정확성이 이보다 낮아야 하므로, 데이터를 다시 살펴본 결과 test set의 예 중 다수가 training set의 예와 중복되는 것으로 나타남
  - 데이터를 분할하기 전에 입력 데이터베이스에서 동일한 스팸 메일의 중복 항목을 솎아내지 않았던 것
  - 따라서 테스트 데이터 중 일부가 의도치 않게 학습에 사용되어, 모델이 새 데이터로 얼마나 효과적으로 일반화되는지 정확히 측정할 수 없게 되었음











학습률을 예를 들어 0.001로 낮추면 테스트 손실이
학습 손실과 매우 유사한 값까지 하락합니다. 
대부분의 실행에서는 배치 크기를 늘려도 학습 손실 
또는 테스트 손실에 유의미한 영향이 없습니다. 
그러나 실행 중 소수에서는 배치 크기를 20 이상으로 늘릴 때 
테스트 손실이 학습 손실보다 약간 낮은 값으로 하락합니다.


학습/평가 데이터 비율을 50%에서 10%로 줄이면 
학습 세트의 데이터 포인트 수가 급격히 감소합니다. 
데이터가 이렇게 적은데도 배치 크기와 학습률이 높으면 
학습 모델이 최저점을 넘나들며 불규칙적으로 
크게 변화하는 현상이 반복됩니다.

















